version: '3.8'

services:
  traefik:
    image: traefik:v2.11.2
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=admin@integraicontador.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.fields.names.StartUTC=true"
      - "--accesslog.fields.names.Duration=true"
      - "--accesslog.fields.names.ClientUsername=true"
      - "--accesslog.fields.names.RequestHost=true"
      - "--accesslog.fields.names.RequestPath=true"
      - "--accesslog.fields.names.RequestMethod=true"
      - "--accesslog.fields.names.RequestProtocol=true"
      - "--accesslog.fields.names.DownstreamStatus=true"
      - "--accesslog.fields.names.RouterName=true"
      - "--accesslog.fields.names.ServiceName=true"
      - "--accesslog.fields.names.ServiceURL=true"
      - "--accesslog.fields.names.DownstreamStatus=true"
      - "--accesslog.fields.names.DownstreamHost=true"
      - "--accesslog.fields.names.DownstreamResponseSize=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
      - traefik-config:/etc/traefik
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      placement:
        constraints:
          - node.role == manager

  web:
    image: tiangolo/uwsgi-nginx-flask:python3.11
    volumes:
      - app-data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`api.integraicontador.com`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
      - "traefik.http.middlewares.web-redirect.redirectscheme.scheme=https"
      - "traefik.http.services.web.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.web-compress.compress=true"
      - "traefik.http.middlewares.web-headers.headers.sslRedirect=true"
      - "traefik.http.middlewares.web-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.web-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.web-headers.headers.stsPreload=true"
      - "traefik.http.routers.web.middlewares=web-headers,web-compress"
      - "traefik.http.routers.web.service=web"
      - "traefik.http.services.web.loadbalancer.passHostHeader=true"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - FLASK_RUN_HOST=0.0.0.0
      - API_HOST=api-nfe
      - API_PORT=3002
    command: >
      bash -c '
      apt-get update && 
      apt-get install -y git && 
      git clone https://github.com/braulliomarques/Frontendnfe.git /tmp/repo && 
      mkdir -p /app/data && 
      cp -r /tmp/repo/* /app/ && 
      if [ -f /tmp/repo/nfe_keys.txt ]; then cp /tmp/repo/nfe_keys.txt /app/data/; fi && 
      if [ -f /tmp/repo/url_cache.json ]; then cp /tmp/repo/url_cache.json /app/data/; fi && 
      pip install -r requirements.txt && 
      sed -i "s|http://0.0.0.0:3002|http://$API_HOST:$API_PORT|g" app.py && 
      sed -i "s/app.run(debug=True)/app.run(host=\"0.0.0.0\", debug=True)/" app.py && 
      flask run'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first

  api-nfe:
    # Se você já tiver um serviço externo, apenas referencia ele aqui
    # Esta configuração assume que você está usando o serviço em outro stack 
    # ou em outra parte da infraestrutura
    image: nginx:alpine  # Placeholder, substitua pela imagem correta
    deploy:
      replicas: 0
      restart_policy:
        condition: none

volumes:
  traefik-letsencrypt:
    external: false
  traefik-config:
    external: false
  app-data:
    external: false 
